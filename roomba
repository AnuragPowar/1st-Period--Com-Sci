import java.util.Scanner;
import javax.swing.JOptionPane;
import kareltherobot.*;

public class Driver implements Directions {
private static Robot roomba;

public static void main(String[] args) {
// --- SETUP ---
String wrldName = "basicRoom.wld";
World.readWorld(wrldName);
World.setVisible(true);
World.setSize(15, 15);
World.setDelay(7);

Robot r = new Robot(7, 6, East, 100);

// --- STATS VARIABLES ---
int area = 0;
int numPiles = 0;
int totalBeepers = 0;
int biggestPile = 0;
int biggestPileStreet = 0;
int biggestPileAvenue = 0;

boolean done = false;

// --- CLEANING LOOP (zig-zag pattern) ---
while (!done) {
// move across current row
while (r.frontIsClear()) {
// count this square
area++;

// check for beepers
int pileSize = 0;
while (r.nextToABeeper()) {
r.pickBeeper();
pileSize++;
}

if (pileSize > 0) {
numPiles++;
totalBeepers += pileSize;

if (pileSize > biggestPile) {
biggestPile = pileSize;
biggestPileStreet = r.street();
biggestPileAvenue = r.avenue();
}
}

// move forward
if (r.frontIsClear()) {
r.move();
}
}

// --- last square in row ---
area++;
int pileSize = 0;
while (r.nextToABeeper()) {
r.pickBeeper();
pileSize++;
}
if (pileSize > 0) {
numPiles++;
totalBeepers += pileSize;
if (pileSize > biggestPile) {
biggestPile = pileSize;
biggestPileStreet = r.street();
biggestPileAvenue = r.avenue();
}
}

// --- check if there is another row ---
if (r.facingEast()) {
r.turnLeft();
if (r.frontIsClear()) {
r.move();
r.turnLeft();
} else {
done = true; // no more rows
}
} else if (r.facingWest()) {
turnRight(r);
if (r.frontIsClear()) {
r.move();
turnRight(r);
} else {
done = true; // no more rows
}
}
}

// --- FINAL STATS ---
double avgPile = (numPiles > 0) ? (double) totalBeepers / numPiles : 0;
double percentDirty = (area > 0) ? (100.0 * numPiles / area) : 0;

System.out.println("The Area of the room is " + area);
System.out.println("The Number of piles are " + numPiles);
System.out.println("The Total number of beepers was " + totalBeepers);
System.out.println("The biggest pile was " + biggestPile);
System.out.println("The location of the largest pile was street "
+ biggestPileStreet + " avenue " + biggestPileAvenue);
System.out.println("The Average pile size was " + avgPile);
System.out.println("The Percent dirty was " + percentDirty + "%");
}

// --- HELPER METHOD ---
public static void turnRight(Robot r) {
r.turnLeft();
r.turnLeft();
r.turnLeft();
}
}
